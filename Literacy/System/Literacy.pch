//
//  Literacy.pch
//  Literacy
//
//  Created by Yuri on 2020/11/17.
//

#ifndef Literacy_pch
#define Literacy_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.
//头文件
#ifdef __OBJC__

#import "AppDelegate.h"
#import "BaseViewController.h"
//#import "BaseButoumingViewController.h"
#import "MBProgressHUD.h"
#import "SVProgressHUD.h"
#import "UIImageView+WebCache.h"
#import "UIButton+WebCache.h"

//#import "AFNetWorking.h"
#import <AFNetworking/AFNetworking-umbrella.h>


#import "MJRefresh.h"
#import "MJExtension.h"
#import "SDCycleScrollView.h"

#import "SDAutoLayout.h"
#import "JKUtil.h"
#import "UIImage+Extension.h"
#import "UIButton+EnlargeTouchArea.h"
#import "NSString+HEX.h"

#import "YLNavgationController.h"
#import "UIImage+Common.h"
#import "UIImage+GIF.h"
#import "NoHighBtn.h"
//#import "YLwebViewController.h"
#import "AllModel.h"
#import "UIImage+GradientColor.h"
#import <TZImagePickerController/TZImagePickerController.h>
#import "MainViewController.h"

//网络请求头
#import "YLHttpTool.h"
#import "ASIHTTPRequest.h"
//#import "NetUrlHeader.h"
#import "NSString+urlParam.h"

//#import "WXApi.h"
#import <UMShare/UMShare.h>
#import "NudeIn.h"
#import <UMCommon/MobClick.h>
#import <YYImage/YYImage.h>
#import "HeaderUrl.h"

#endif

#define SoftwareVersion  [[[NSBundle mainBundle] infoDictionary]objectForKey:@"CFBundleShortVersionString"]

#define kusername   @"kuser_name"
#define kuserid     @"kuser_id"
#define ktoken      @"ktoken"
#define kis_member  @"kismember"
#define kfree_words_num   @"kfree_words_num"
#define khas_learn_num    @"khas_learn_num"
#define kziKu       @"kziku"
#define weixinappid @"wx02362430224788af"
#define appstoreId  @"1523616454"
#define kxieyi      @"kxieyi"
#define CK_universalLink @"https://www.leqi.us/"
#define kuserwhetherBind @"kuserwhetherBind"
#define kshouye     @"kshouye"


#define Appkey      @"ALMIGHTY_IDPHOTO"
#define ClientType  @"iOS"
#define khistory    @"khistory"
#define kremen      @"kremen"
#define kbaocun     @"kbaocun"

#define knickname   @"knickname"
#define kheadIcon   @"kheadIcon"
#define Transformtimeinterval 2.0

#define localPhone @"18012485542"
#define localweChat @"idphoto2017"
#define kwechateCode @"wechatCode"
#define shareUrl @"https://operation.id-photo-verify.com/apps/Almighty/DownloadPage/index.html"

#define  YUserDefaults [NSUserDefaults standardUserDefaults]
#define  YSystemFont(size) [UIFont systemFontOfSize:size]

//常用变量
#define kDevice_Is_iPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) : NO)
#define kDevice_Is_iPhone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) : NO)
#define kDevice_Is_iPhone6Plus ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size) : NO)
#define kScaleFrom_iPhone5_Desgin(_X_) (_X_ * (YScreenW/320))


// 判断是否是ipad
#define isPad ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad)
// 判断iPhone4系列
#define kiPhone4 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhone5系列
#define kiPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhone6系列
#define kiPhone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iphone6+系列
#define kiPhone6Plus ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhoneX
#define IS_IPHONE_X ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPHoneXr
#define IS_IPHONE_Xr ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhoneXs
#define IS_IPHONE_Xs ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhoneXs Max
#define IS_IPHONE_Xs_Max ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)

#define Height_StatusBar ((IS_IPHONE_X == YES || IS_IPHONE_Xr == YES || IS_IPHONE_Xs == YES || IS_IPHONE_Xs_Max == YES) ? 44.0 : 20.0)
#define Height_NavBar ((IS_IPHONE_X == YES || IS_IPHONE_Xr == YES || IS_IPHONE_Xs == YES || IS_IPHONE_Xs_Max == YES) ? 88.0 : 64.0)
#define Height_TabBar ((IS_IPHONE_X == YES || IS_IPHONE_Xr == YES || IS_IPHONE_Xs == YES || IS_IPHONE_Xs_Max == YES) ? 83.0 : 49.0)
#define Height_Bottom ((IS_IPHONE_X == YES || IS_IPHONE_Xr == YES || IS_IPHONE_Xs == YES || IS_IPHONE_Xs_Max == YES) ? 34.0 : 0.0)



//输出文件名， 和打印的具体编号
//去掉log日志
#ifdef DEBUG
#define NSLog(FORMAT, ...) fprintf(stderr,"%s:%d\t%s\n",[[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);
#else
#define NSLog(...)
#endif


#ifdef DEBUG //处于开发阶段
#define YLog(...) NSLog(__VA_ARGS__)
#else //处于发布阶段
#define YLog(...)
#endif


// 屏幕尺寸
#define YScreenW [UIScreen mainScreen].bounds.size.width
#define YScreenH [UIScreen mainScreen].bounds.size.height
#define YScreenScale [UIScreen mainScreen].scale
#define YScaleSize YScreenW/375.0
#define YWidthcaleSize ((YScreenW/375.0) >= 1 ? (YScreenW/375.0) : 1)

#define YScaleWidth  (YScreenW > YScreenH ? YScreenW /1080.0 : YScreenH /1080.0)
#define YScaleHeight (YScreenW > YScreenH ? YScreenH /810.0  : YScreenW /810.0)

#define YnavBarHeight 64
#define YtaBarHeight 44
#define YstatusBarHeight 20
#define Ymargin 16 * YScaleSize

// 弱引用
#define YWeakSelf __weak __typeof(self) weakSelf = self;

//颜色
#define YARGBColor(a, r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:(a)/255.0]
#define YColor(r, g, b) YARGBColor(255, (r), (g), (b))
#define YGrayColor(v) YColor((v), (v), (v))
#define YRandomColor YColor(arc4random_uniform(255), arc4random_uniform(255), arc4random_uniform(255))
#define RGB(a,b,c)  [UIColor colorWithRed:a/255.0 green:b/255.0 blue:c/255.0 alpha:1.0]
/**适配字体大小*/
#define FONTSIZE(size) YScreenW > 375 ? (size * (414.0 / 375.0)) : (YScreenW == 375 ? size : size  * (320.0 / 375.0))

// 方法输出
#define YLogFunc YLog(@"%s", __func__);

//系统特殊要求 （颜色）
#define kstandardColor                  [JKUtil getColor:@"F5F7FA"]  //基准色 常态
#define kgreenColor                     [JKUtil getColor:@"1ab696"]
#define klightgreenColor                [JKUtil getColor:@"2ecc71"]
#define korangeColor                    [JKUtil getColor:@"FF5E18"]
#define klightOrangeColor               [JKUtil getColor:@"f6b517"]
#define kiconColor                      [JKUtil getColor:@"505050"]
#define kciyaoColor                     [JKUtil getColor:@"4a4a4a"]
#define kblueColor                      [JKUtil getColor:@"5C7CFE"]

#define kpurpleColor                    [JKUtil getColor:@"4710ED"]
#define klineColor                      [JKUtil getColor:@"E5E5EA"]
#define kgrayColor                      [JKUtil getColor:@"838385"]
#define kblackColor                     [JKUtil getColor:@"303133"]

#define WhiteColor                      [UIColor whiteColor]
#define BlackColor                      [UIColor blackColor]
#define OrangeColor                     [UIColor orangeColor]
#define RedColor                        [UIColor redColor]
#define BlueColor                       [UIColor blueColor]
#define GrayColor                       [UIColor grayColor]
#define GreenColor                      [UIColor greenColor]
#define ClearColor                      [UIColor clearColor]


#endif /* Literacy_pch */
